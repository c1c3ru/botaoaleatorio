plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.botaoaleatorio"
    compileSdkVersion flutter.compileSdkVersion  // ou defina um valor fixo, ex: 34
    ndkVersion flutter.ndkVersion

    defaultConfig {
        applicationId "com.example.botaoaleatorio"
        minSdkVersion flutter.minSdkVersion    // ou defina um valor fixo, ex: 21
        targetSdkVersion flutter.targetSdkVersion // ou defina um valor fixo, ex: 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        multiDexEnabled true
         ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    buildTypes {
        release {
            // TODO: Configure seu signingConfig para release se necessário
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'
    // Outras dependências...
}
android {
  compileSdkVersion 34
}